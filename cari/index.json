[{"content":"Cara membuat custom sertifikat ssl untuk domain lokal sehingga bisa mengakses domain lokal dengan https tanpa ada warning dari browser. Sertifikat yang akan dibuat adalah untuk domain dan IP berikut:\nDomain: ashok.lan (domain untuk jaringan lokal) IP: 10.0.11.240 (IP lokal juga) Generate Certificate Authority (CA) Certificate Authority (CA) adalah organisasi yang melakukan verifikasi terhadap sertifikat digital.\nGenerate RSA key openssl genrsa -aes256 -out ca-key.pem 4096 masukkan pass phrase: xxx, akan menghasilkan file ca-key.pem\ngenerate public CA cert openssl req -new -x509 -sha256 -days 365 -key ca-key.pem -out ca.pem\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # output command Enter pass phrase for ca-key.pem: You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Country Name (2 letter code) [AU]:ID State or Province Name (full name) [Some-State]: Locality Name (eg, city) []: Organization Name (eg, company) [Internet Widgits Pty Ltd]:Ashz Inc. Organizational Unit Name (eg, section) []: Common Name (e.g. server FQDN or YOUR name) []:Ashz Email Address []:xxx@ashz.xyz akan menghasilkan file ca.pem\nopsional, melihat konten sertifikat openssl x509 -in ca.pem -text\nGenerate sertifikat membuat rsa key openssl genrsa -out cert-key.pem 4096 akan menghasilkan file cert-key.pem\nmembuat Sertificate Signing Request (CSR) openssl req -new -sha256 -key cert-key.pem -out cert.csr\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # output command You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter \u0026#39;.\u0026#39;, the field will be left blank. ----- Country Name (2 letter code) [AU]:ID State or Province Name (full name) [Some-State]: Locality Name (eg, city) []: Organization Name (eg, company) [Internet Widgits Pty Ltd]:Ashz Inc. Organizational Unit Name (eg, section) []: Common Name (e.g. server FQDN or YOUR name) []:Ashok Email Address []:xxx@ashok.lan Please enter the following \u0026#39;extra\u0026#39; attributes to be sent with your certificate request A challenge password []: An optional company name []: menghasilkan file cert.csr\nmembuat file untuk altName disini saya membuat domain wildcard untuk *.ashok.lan dan menambahkan IP, agar IP dan semua subdomain tersebut dapat diakses menggunakan https tanpa ada warning dari browser.\necho \u0026quot;subjectAltName=DNS:*.ashok.lan,IP:10.0.11.244\u0026quot; \u0026gt; extfile.cnf\nmenghasilkan file extfile.cnf\nmembuat sertifikat openssl x509 -req -sha256 -days 365 -in cert.csr -CA ca.pem -CAkey ca-key.pem -out cert.pem -extfile extfile.cnf -CAcreateserial\n1 2 3 4 # output command Certificate request self-signature ok subject=C = ID, ST = Some-State, O = Ashz Inc., CN = Ashok, emailAddress = xxx@ashok.lan Enter pass phrase for ca-key.pem: masukkan pass phrase CA, kemudian enter menghasilkan file cert.pem\nSelanjutnya install ca.pem pada perangkat yang akan mengakses domain *.ashok.lan dan gunakan file cert-key.pem dan cert.pem untuk setting ssl domain dan subdomain ashok.lan\nsumber refrensi:\nChristianLempa ","date":"2023-02-26T00:27:42Z","permalink":"https://ashz.xyz/p/custom-ssl-domain/","title":"Custom SSL Domain"},{"content":"Setup ini biasanya dilakukan setiap setelah install ulang pc, ganti pc atau mau update blog di perangkat baru yang belum ada skrip blog ini.\nClone repo Jalankan perintah git clone git@github.com:3Shoka/ashz.git\nPindah ke direktori cd ashz\nInstall hugo Sumber refrensi: https://gohugo.io/installation/linux/\nJalankan perintah sudo apt install hugo\nCek versi hugo hugo version\n1 2 # respon dari cek versi hugo hugo v0.92.2+extended linux/arm64 BuildDate=2022-02-23T16:47:50Z VendorInfo=ubuntu:0.92.2-1 Update submodule Perintah ini digunakan untuk clone theme Stack yang ditambahkan menggunakan git submodule\ngit submodule update --init\nJalankan server hugo server\nSetup selesai, selanjutnya tinggal update blog dengan menambah halaman atau postingan.\n","date":"2023-01-21T01:40:27Z","permalink":"https://ashz.xyz/p/setup-blog-ini/","title":"Setup Blog Ini"},{"content":"Saya setiap harinya menggunakan laptop dengan sistem operasi linux. Namun kadang menggunakan PC dirumah yang menggunakan OS Windows, tapi juga saya pasang WSL2 karena sudah terbiasa dengan lingkungan linux, seperti untuk kebutuhan ssh dan lainnya. Suatu saat saya ingin menggunakan esptool untuk flash firmware ESP8266 ataupun mau monitoring serial console nya di PC Windows, ketika saya pasang USB to Serial FTDI tidak muncul di list ls -l /dev/ttyUSB* maupun lsusb pada WSL2.\nInstall usbipd Kemudian saya cari cari apakah bisa USB TTL di Windows bisa diakses di WSL2, dan menemukan usbipd-win. Cara install nya gampang, buka Powershell sebagai Administrator, kemudian jalankan winget install usbipd, proses instalasi akan langsung berjalan, pastikan koneksi internet stabil.\nSetelah proses install selesai, tutup window powershell dan buka lagi sebagai Administrator. Jalankan perintah usbipd jika muncul tampilan berikut berarti usbipd sudah terinstall.\nMenggunakan aplikasi usbipd Dari gambar diatas sudah ditampilkan dengan jelas daftar perintah juga keterangan dari perintah tersebut\nPerhatikan pada bagian perangkat USB Serial Converter, dari kedua perintah diatas menampilkan status usb nya Not shared dan Not attached ini menandakan USB serialnya belum terhubung ke WSL. Untuk menghubungkan USB Serial Converter agar bisa diakses melalui WSL, jalankan perintah usbipd wsl attach -b \u0026lt;BUSID\u0026gt;. BUSID adalah Bus ID yang ditampilkan pada list perangkat, untuk kasus ini USB Serial memiliki Bus ID 5-3.\nError attach Jika terjadi error ketika menjalankan perintah attash, seperti error birikut ini:\n1 usbipd: error: WSL \u0026#39;usbip\u0026#39; client not correctly installed. See https://github.com/dorssel/usbipd-win/wiki/WSL-support for the latest instructions. Solusinya sudah ditunjukan pada keterangan errornya, kunjungi link yang tertera, ikuti petunjuk selanjutnya. Kurang lebih jalankan perintah seperti dibawah ini:\n1 2 3 # jalankan perintah ini di WSL sudo apt install linux-tools-virtual hwdata sudo update-alternatives --install /usr/local/bin/usbip usbip `ls /usr/lib/linux-tools/*/usbip | tail -n1` 20 Setelah sukses menjalankan perintah diatas, jalankan lagi perintah usbipd wsl attach -b 5-3 di Powershell. Status USB Serial sudah Attached.\nCek list usb wsl Jika usb sudah di hubungkan menggunakan aplikasi usbipd, kemudian tes dari sisi WSL apakah USB Serial sudah terdeteksi.\nTest monitoring serial console ESP01 Setelah menghubungkan ESP01 dengan FTDI Serial dan sudah terdeteksi oleh WSL, saatnya tes monitoring serial console ESP01 melalui terminal pada WSL. Untuk monitoring serial console ini saya menggunakan aplikasi screen, dan sebagai catatan /dev/ttyUSB* pada WSL owner dan group nya adalah root, maka untuk menjalankan perintah screen harus diawali dengan sudo.\n1 2 3 # /dev/ttyUSB0 adalah lokasi device usb serial # 115200 adalah baudrate, nilai bisa disesuaikan sudo screen /dev/ttyUSB0 115200 Setelah menjalankan perintah diatas tampilan akan blank, tunggu beberapa saat akan muncul log serial console. Jika tidak muncul apapun lakukan perintah reset pada device. Jika muncul log tampilan karakter tidak jelas, kemungkinan perlu merubah nilai baudrate.\n","date":"2022-07-17T09:10:05+07:00","permalink":"https://ashz.xyz/p/menghubungkan-usb-ke-wsl2/","title":"Menghubungkan USB ke WSL2"},{"content":"Kali ini saya akan membuat mqtt broker menggunakan Eclipse Mosquitto, selain gratis, setup nya juga gampang (setidaknya untuk kebutuhan sendiri). Mosquitto akan dijalankan di dalam container docker menggunakan aplikasi portainer. Portainer adalah aplikasi GUI berbasis web yang memudahkan untuk manajemen docker.\nPersiapan file dan direktori Container Mosquitto membutuhkan 3 folder untuk menyimpan konfigurasi, data dan log\n1 2 # perintah untuk membuat 3 folder mkdir -p mosquitto/{config,data,log} Kemudian membuat file konfigurasi awal mosquitto\n1 2 # membuat file mosquitto.conf vi mosquitto/config/mosquitto.conf isi file konfigurasi\n1 2 3 4 5 6 7 8 9 10 # file mosquitto.conf allow_anonymous true # untuk konek ke broker tanpa menggunakan user \u0026amp; password persistence true persistence_location /mosquitto/data # simpan log ke dalam file log_dest file /mosquitto/log/mosquitto.log # menampilkan log ke stdout docker # log_dest stdout listener 1883 # default port Konfigurasi di portainer Untuk membuat container di portainer, pilih menu Containers \u0026gt; Add container. Di halaman Create container isikan parameter berikut:\nName: mosquitto Image: eclipse-mosquitto Manual network port publishing: host: 1883 \u0026gt; container: 1883, port untuk host bisa menggunakan port acak, tidak harus sama 1883 Command \u0026amp; logging: User: 1883, untuk user mosquitto di dalam container Console: Interactive \u0026amp; TTY Volumes: container \u0026gt; host /mosquitto/config/mosquitto.conf \u0026gt; /home/orangepi/mosquitto/config/mosquitto.conf /mosquitto/data \u0026gt; /home/orangepi/mosquitto/data /mosquitto/log \u0026gt; /home/orangepi/mosquitto/log Restart policy: Always Setelah semua diisi, klik Deploy the container. Setelah container sukses dibuat dan status running, Saatnya testing.\nTest koneksi broker Testing broker mqtt menggunakan aplikasi MQTT Explorer, isi parameter berikut: Nama: mqtt broker, isi nama untuk koneksi Protocol: mqtt:// Host: 10.0.11.240, alamat IP broker Port: 1883, port listener mosquitto, sesuaikan dengan setting port host Username dan password, sementara dikosongkan Klik Save dan Connect\nJika koneksi berhasil, akan muncul tampilan explore mqtt broker, dan di log mosquitto mucul log baru :\n1 1657180721: New client connected from 10.0.11.240:56026 as mqtt-explorer-0261386d (p2, c1, k60). Untuk cek log, jalankan perintah sudo tail -f mosquitto/log/mosquitto.log. Jika file konfigurasi log_dest di set stdout, untuk cek log docker logs -f mosquitto\nMenambahkan user untuk akses broker Sangat penting untuk setting akun untuk otentikasi, agar tidak sembarang pengguna bisa mengakses mqtt broker.\nMembuat password file Untuk membuat password file gunakan perintah mosquito_passwd, perintah lengkapnya sebagai berikut mosquitto_passwd -c \u0026lt;password file\u0026gt; \u0026lt;username\u0026gt;, parameter -c untuk membuat file baru. Karena saya membuat mosquitto di dalam docker container, jadi untuk menjalankan mosquitto_passwd harus diawali dengan perintah docker exec, docker exec -it \u0026lt;nama container\u0026gt; \u0026lt;perintah\u0026gt;\nPerintah lengkap :\n1 2 # eksekusi perintah untuk membuat user mosquitto docker exec -it mosquitto mosquitto_passwd -c /mosquitto/config/passwd ashoka Setelah menjalankan perintah diatas maka akan muncul prompt untuk memasukkan password, ketik password kemudian enter dan ulangi password untuk konfirmasi.\nUntuk cek file hasil dari perintah diatas, jalankan perintah\n1 2 # melihat isi file passwd docker exec -it mosquitto cat /mosquitto/config/passwd File akan berisi username dan password yang telah dienkripsi.\nUpdate file config Untuk menerapkan otentikasi pada broker, harus ditambahkan konfigurasi untuk memuat file password yang sudah dibuat tadi\n1 2 3 4 5 6 7 8 #file: mosquitto/config/mosquitto.conf allow_anonymous true # biarkan anonim tetap true dulu persistence true persistence_location /mosquitto/data log_dest file /mosquitto/log/mosquitto.log listener 1883 password_file /mosquitto/config/passwd # baris ini yang ditambahkan Setelah update file config, restart container mosquitto, kemudian test menggunakan MQTT explorer jika sudah berhasil test login mqtt explorer dengan username dan password yang baru dibuat, maka parameter file konfigurasi allow_anonymous true perlu diubah menjadi allow_anonymous false agar tidak sembarang orang bisa mengakses broker mosquitto.\n","date":"2022-07-11T11:27:34+07:00","permalink":"https://ashz.xyz/p/membuat-mqtt-broker/","title":"Membuat MQTT Broker"},{"content":"Upgrade portainer dari versi 2.13.1 ke 2.14\nProses backup setting Sebelum melakukan ugrade alangkah baiknya melakukan proses backup terlebih dahulu, agar jika terjadi kesalahan kita dapat melakukan restore ke setting sebelumnya.\nUntuk melakukan backup lakukan perintah berikut:\nlogin sebagai admin masuk ke menu Setting \u0026gt; Backup portainer hasil backup dapat diproteksi menggunakan enkripsi password, jika memilih password protect klik download backup Proses upgrade portainer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # stop container portainer docker stop portainer # hapus container portainer docker rm portainer\t# pull image portainer versi terbaru docker pull portainer/portainer-ce:latest # deploy portainer versi terbaru docker run -d -p 8000:8000 -p 9443:9443 \\ --name=portainer --restart=always \\ -v /var/run/docker.sock:/var/run/docker.sock \\ -v portainer_data:/data \\ portainer/portainer-ce:latest Selesai Upgrade selesai, test portainer versi terbaru di browser https://IP-ADDRESS:9443/\n","date":"2022-07-06T19:24:35+07:00","permalink":"https://ashz.xyz/p/upgrade-portainer/","title":"Upgrade Portainer"},{"content":"Membuat rangkaian IOT untuk memonitoring suhu dan kelembaban tanpa perlu repot koding dan kompilasi kode.\nPersiapan alat dan bahan Beberapa alat dan bahan yang perlu disipkan adalah sebagai berikut:\nBreadboard, untuk memasang rangkaian Wemos D1 mini (atau modul esp8266 lainnya) Sensor DHT22, sensor suhu dan kelembaban Kabel jumper, untuk menghubungkan rangkaian tentunya Kabel data, untuk flash firmware dan suplai power Dan tentunya membutuhkan Laptop/PC dan koneksi internet Skema rangkaian Rangkaian sederhanyanya seperti ini:\nKaki pin negatif (-) pada dht22 dihubungkan ke ground pada wemos Kaki pin positif (+) pada dht22 dihubungkan ke 3V pada wemos Kaki pin output (data) pada dht22 dihubungkan ke D7 pada wemos Kabel data dihubungkan ke wemos dan laptop Flash firmware Firmware yang akan digunakan adalah Tasmota. Tasmota adalah firmware open source untuk chipset berbasis Espressif (ESPxxx). Berikut ini langkah-langkah untuk flash tasmota ke wemos:\nBuka Tasmota Web Installer Hubungkan wemos ke laptop dengan kabel data Pilih versi firmware, untuk saat ini versi Release Tasmota (english) Klik Connect untuk memilih serial port dari wemos Pilih install release tasmota Check erase device, kemudian klik Install, ditunggu prosesnya, jangan pindah kemana mana Setelah install selesai, klik next untuk menghubungkan tasmota ke wifi Hubungkan ke wifi, kemudian klik visit device, akan muncul tampilan awal tasmota Konfigurasi tasmota Konfigurasi modul Hal pertama yang perlu di sesuaikan adalah modul pada tasmota, karena kali ini menggunakan wemos maka konfigurasinya seperti ini:\nPilih menu Configuration \u0026gt; Configure Module \u0026gt; pilih module type Generic (18) \u0026gt; Save Tunggu hingga tasmota restart dan kembali ke halaman awal Pilih menu Configuration \u0026gt; Configure Module, maka tampilan module akan seperti ini Sesuaikan pin dengan rangkaian Setelah modul generic diaktifkan, selanjutnya kita perlu menyesuaikan pin modul sesuai skema rangkaian. Karena hanya ada satu komponen yang terhubung, jadi hanya satu pin saja yang perlu disesuaikan yaitu pin D7 untuk output dari sensor DHT22. Untuk sensor DHT22 di tasmota kita bisa menggunakan nama sensor AM2301. Info lebih lanjut tentang komponen gpio disini;\nPada tampilah halaman module, temukan pin D7 GPIO13 Klik dropdown dan pilih AM2301 (opsional) pada pin D4 GPIO2 pilih dropdown LedLink untuk menyalakan led built-in sebagai indikator status Klik Save, tunggu hingga restart dan kembali ke halaman awal Jika rangkaian sudah benar maka di halaman depan akan muncul deteksi dari sensor, dan led built-in akan menyala/berkedip Mudah sekali kan ? tanpa perlu menulis kode dan kompilasi kode menggunakan arduino IDE, kita bisa membuat rangkaian sensor dht22 dengan wemos d1 mini untuk monitoring suhu dan kelembaban. Hanya perlu menyesuaikan konfigurasi melalui tampilan antarmuka di web.\nKonfigurasi Wifi Dengan firmware tasmota kita bisa menambahkan dua koneksi wifi, jadi misal wifi1 tidak tersedia maka akan konek ke wifi2 secara otomatis. Untuk konfigurasi wifi:\nPilih menu Configuration \u0026gt; Configure Wifi Masukkan nama wifi dan password yang akan digunakan Isikan Hostname, untuk identifikasi nama host di jaringan, misal sensor-dht22 Klik Save, tunggu hingga restart dan kembali ke halaman awal Konfigurasi MQTT MQTT adalah protokol yang biasa digunakan perangkat IOT untuk mengirim(publish) dan/atau menerima(subscribe) data. Untuk menggunakan mqtt kita harus menyiapkan dulu mqtt brokernya. Dalam postingan sebelumnya sudah ada cara untuk membuat container mqtt broker. Sebelum menghubungkan tasmota ke mqtt broker, kita test dulu mqtt brokernya menggunakan aplikasi MQTT-Explorer. Jika sudah terhubung, selanjutnya menghubungkan tasmota ke mqtt broker:\nPilih menu Configuration \u0026gt; Configure MQTT Host, diisi dengan alamat IP/domain host mqtt broker, dalam contoh kali ini adalah ip lokal 192.168.136.123 Port, diisi dengan port default mqtt 1883 Client, bisa di biarkan secara default atau diisi dengan, misal mqttc_dht22, nama ini akan muncul di log mqtt broker ketika sudah terhubung. User dan Password diisikan dengan user password yang digunakan untuk login ke mqtt broker, dalam contoh kali ini adalah user ashoka dan password haha Untuk Topic, kita samakan dengan nama Hostname saja, diisi dengan %hostname% Full topic, biarkan default Klik Save, tunggu hingga restart dan kembali ke halaman awal Jika koneksi ke mqtt broker berhasil maka akan muncul 3 topic baru yang tampil di mqtt explorer yaitu cmnd, tasmota, tele. Dan di dalam sub topic nya muncul nama device kita yang diberi nama sesuai nama hostname tadi, sensor-dht22. ","date":"2022-04-20T21:13:17+07:00","permalink":"https://ashz.xyz/p/sensor-suhu-dan-kelembaban/","title":"Sensor Suhu Dan Kelembaban"},{"content":"Berikut ini langkah untuk membuat mqtt broker menggunakan eclipse mosquitto di podman\nMembuat container Masuk menu podman container\nCreate container, isi field berikut\nName : mqtt Owner : User:ashoka Image : docker.io/library/eclipse-mosquitto Command : /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf [tanpa terminal] Port mapping: host:1883 container 1883 tcp Volume: /home/ashoka/Apps/podman/mqtt/config -\u0026gt; /mosquitto/config writable private /home/ashoka/Apps/podman/mqtt/log -\u0026gt; /mosquitto/log writable private /home/ashoka/Apps/podman/mqtt/data -\u0026gt; /mosquitto/data writable private Buat file dan folder berikut:\n1 2 3 4 5 ./mqtt/ ├── config │ └── mosquitto.conf ├── data └── log file ~/A/podman►cat mqtt/config/mosquitto.conf\n1 2 3 4 5 6 allow_anonymous true persistence true persistence_location /mosquitto/data/ log_dest file /mosquitto/log/mosquitto.log listener 1883 Create and run Test broker tanpa user Jika sudah berhasil running, coba test menggunakan aplikasi MQTT-Explorer atau aplikasi lain. Isikan parameter berikut:\nName: broker podman Protocol: mqtt:// Host: localhost Port: 1883 Klik Save kemudian klik Connect.\nJika berhasil maka akan muncul tampilan berikut:\nMembuat user Pada konfigurasi mosquitto sebelumnya itu membolehkan/mengizinkan semua orang terhubung ke mqtt broker tanpa menggunakan username dan password. Agar tidak semua orang dapat memantau aktivitas pada broker kita, perlu dibuatkan user dan password untuk membatasi akses ke broker. Berikut ini langkah-langkah untuk membuat user dan password untuk mqtt broker.\nMasuk ke console container mqtt Jalankan perintah mosquitto_passwd -c /mosquitto/config/passwd ashoka Akan muncul prompt untuk memasukkan password, masukkan password Update file mosquitto.conf, untuk disable anonim dan tambahkan password file 1 2 3 4 5 6 7 # file /mosquitto/config/mosquitto.conf # disable user anonim allow_anonymous false # set lokasi penyimpanan file password password_file /mosquitto/config/passwd Restart container Setelah di restart coba konek ke broker dengan tanpa menggunakan user dan password, maka akan ada peringatan Connection refused: Not authorized. Kemudian coba konek menggunakan user dan password yang tadi sudah dibuat, maka akan berhasil terhubung ke broker.\n","date":"2022-04-20T13:14:51+07:00","permalink":"https://ashz.xyz/p/podman-mqtt-broker/","title":"Podman Mqtt Broker"},{"content":"Membuat container InfluxDB di podman menggunakan fedora cockpit\nMasuk menu podman container\nCreate container, isi field berikut\nName : flux2 Owner : User:ashoka Image : docker.io/library/influxdb Command : influxd [tanpa terminal] Port mapping: host:8086, container:8086 tcp Volume: /home/ashoka/Apps/podman/flux2/data -\u0026gt; /var/lib/influxdb2 writable shared /home/ashoka/Apps/podman/flux2/config -\u0026gt; /etc/influxdb2 writable shared Environment variabel:\nDOCKER_INFLUXDB_INIT_MODE=setup DOCKER_INFLUXDB_INIT_USERNAME=ashoka DOCKER_INFLUXDB_INIT_PASSWORD=Ashokani DOCKER_INFLUXDB_INIT_ORG=lokal DOCKER_INFLUXDB_INIT_BUCKET=test Buat folder berikut:\n1 2 3 4 . └── flux2 ├── config └── data Create and run ","date":"2022-04-19T10:05:48+07:00","permalink":"https://ashz.xyz/p/podman-influxdb/","title":"Podman InfluxDB"},{"content":"Membuat container Node-RED di podman menggunakan fedora cockpit\nMasuk menu podman container\nCreate container, isi field berikut\nName : nodered Owner : User:ashoka Image : docker.io/nodered/node-red Command : bash [tanpa terminal] Port mapping: host:1880, container:1880 tcp Environment variabel:\nNODE_RED_CREDENTIAL_SECRET=nganu Create and run\n","date":"2022-04-19T10:05:48+07:00","permalink":"https://ashz.xyz/p/podman-node-red/","title":"Podman Node-RED"},{"content":"Membuat container MySQL 8 di podman menggunakan fedora cockpit\nMasuk menu podman container\nCreate container, isi field berikut\nName : mysql8 Owner : User:ashoka Image : docker.io/mysql/mysql-server Command : mysqld [tanpa terminal] Port mapping: host:3306 container 3306 tcp Volume: /home/ashoka/Apps/podman/mysql8/custom.cnf -\u0026gt; /etc/my.cnf.d/custom.cnf writable shared /home/ashoka/Apps/podman/mysql8/initdb -\u0026gt; /docker-entrypoint-initdb.d writable shared /home/ashoka/Apps/podman/mysql8/data -\u0026gt; /var/lib/mysql writable shared Environment variabel:\nMYSQL_ROOT_PASSWORD : lahacia MYSQL_USER : ashoka MYSQL_PASSWORD : haha Buat file dan folder berikut:\n1 2 3 4 5 6 . └── mysql8 ├── custom.cnf ├── data └── initdb └── grant.sql file ~/A/podman►cat mysql8/custom.cnf\n1 2 [mysqld] bind-address = 0.0.0.0 file ~/A/podman►cat mysql8/initdb/grant.sql\n1 GRANT ALL PRIVILEGES ON *.* TO \u0026#39;ashoka\u0026#39;@\u0026#39;%\u0026#39; WITH GRANT OPTION; Create and run ","date":"2022-04-18T11:35:57+07:00","permalink":"https://ashz.xyz/p/podman-mysql-8/","title":"Podman Mysql 8"}]