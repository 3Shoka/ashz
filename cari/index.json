[{"content":"Upgrade portainer dari versi 2.13.1 ke 2.14\nProses backup setting Sebelum melakukan ugrade alangkah baiknya melakukan proses backup terlebih dahulu, agar jika terjadi kesalahan kita dapat melakukan restore ke setting sebelumnya.\nUntuk melakukan backup lakukan perintah berikut:\nlogin sebagai admin masuk ke menu Setting \u0026gt; Backup portainer hasil backup dapat diproteksi menggunakan enkripsi password, jika memilih password protect klik download backup Proses upgrade portainer 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # stop container portainer docker stop portainer # hapus container portainer docker rm portainer\t# pull image portainer versi terbaru docker pull portainer/portainer-ce:latest # deploy portainer versi terbaru docker run -d -p 8000:8000 -p 9443:9443 \\ --name=portainer --restart=always \\ -v /var/run/docker.sock:/var/run/docker.sock \\ -v portainer_data:/data \\ portainer/portainer-ce:latest Selesai Upgrade selesai, test portainer versi terbaru di browser https://IP-ADDRESS:9443/\n","date":"2022-07-06T19:24:35+07:00","permalink":"https://ashz.xyz/p/upgrade-portainer/","title":"Upgrade Portainer"},{"content":"Membuat rangkaian IOT untuk memonitoring suhu dan kelembaban tanpa perlu repot koding dan kompilasi kode.\nPersiapan alat dan bahan Beberapa alat dan bahan yang perlu disipkan adalah sebagai berikut:\nBreadboard, untuk memasang rangkaian Wemos D1 mini (atau modul esp8266 lainnya) Sensor DHT22, sensor suhu dan kelembaban Kabel jumper, untuk menghubungkan rangkaian tentunya Kabel data, untuk flash firmware dan suplai power Dan tentunya membutuhkan Laptop/PC dan koneksi internet Skema rangkaian Rangkaian sederhanyanya seperti ini:\nKaki pin negatif (-) pada dht22 dihubungkan ke ground pada wemos Kaki pin positif (+) pada dht22 dihubungkan ke 3V pada wemos Kaki pin output (data) pada dht22 dihubungkan ke D7 pada wemos Kabel data dihubungkan ke wemos dan laptop Flash firmware Firmware yang akan digunakan adalah Tasmota. Tasmota adalah firmware open source untuk chipset berbasis Espressif (ESPxxx). Berikut ini langkah-langkah untuk flash tasmota ke wemos:\nBuka Tasmota Web Installer Hubungkan wemos ke laptop dengan kabel data Pilih versi firmware, untuk saat ini versi Release Tasmota (english) Klik Connect untuk memilih serial port dari wemos Pilih install release tasmota Check erase device, kemudian klik Install, ditunggu prosesnya, jangan pindah kemana mana Setelah install selesai, klik next untuk menghubungkan tasmota ke wifi Hubungkan ke wifi, kemudian klik visit device, akan muncul tampilan awal tasmota Konfigurasi tasmota Konfigurasi modul Hal pertama yang perlu di sesuaikan adalah modul pada tasmota, karena kali ini menggunakan wemos maka konfigurasinya seperti ini:\nPilih menu Configuration \u0026gt; Configure Module \u0026gt; pilih module type Generic (18) \u0026gt; Save Tunggu hingga tasmota restart dan kembali ke halaman awal Pilih menu Configuration \u0026gt; Configure Module, maka tampilan module akan seperti ini Sesuaikan pin dengan rangkaian Setelah modul generic diaktifkan, selanjutnya kita perlu menyesuaikan pin modul sesuai skema rangkaian. Karena hanya ada satu komponen yang terhubung, jadi hanya satu pin saja yang perlu disesuaikan yaitu pin D7 untuk output dari sensor DHT22. Untuk sensor DHT22 di tasmota kita bisa menggunakan nama sensor AM2301. Info lebih lanjut tentang komponen gpio disini;\nPada tampilah halaman module, temukan pin D7 GPIO13 Klik dropdown dan pilih AM2301 (opsional) pada pin D4 GPIO2 pilih dropdown LedLink untuk menyalakan led built-in sebagai indikator status Klik Save, tunggu hingga restart dan kembali ke halaman awal Jika rangkaian sudah benar maka di halaman depan akan muncul deteksi dari sensor, dan led built-in akan menyala/berkedip Mudah sekali kan ? tanpa perlu menulis kode dan kompilasi kode menggunakan arduino IDE, kita bisa membuat rangkaian sensor dht22 dengan wemos d1 mini untuk monitoring suhu dan kelembaban. Hanya perlu menyesuaikan konfigurasi melalui tampilan antarmuka di web.\nKonfigurasi Wifi Dengan firmware tasmota kita bisa menambahkan dua koneksi wifi, jadi misal wifi1 tidak tersedia maka akan konek ke wifi2 secara otomatis. Untuk konfigurasi wifi:\nPilih menu Configuration \u0026gt; Configure Wifi Masukkan nama wifi dan password yang akan digunakan Isikan Hostname, untuk identifikasi nama host di jaringan, misal sensor-dht22 Klik Save, tunggu hingga restart dan kembali ke halaman awal Konfigurasi MQTT MQTT adalah protokol yang biasa digunakan perangkat IOT untuk mengirim(publish) dan/atau menerima(subscribe) data. Untuk menggunakan mqtt kita harus menyiapkan dulu mqtt brokernya. Dalam postingan sebelumnya sudah ada cara untuk membuat container mqtt broker. Sebelum menghubungkan tasmota ke mqtt broker, kita test dulu mqtt brokernya menggunakan aplikasi MQTT-Explorer. Jika sudah terhubung, selanjutnya menghubungkan tasmota ke mqtt broker:\nPilih menu Configuration \u0026gt; Configure MQTT Host, diisi dengan alamat IP/domain host mqtt broker, dalam contoh kali ini adalah ip lokal 192.168.136.123 Port, diisi dengan port default mqtt 1883 Client, bisa di biarkan secara default atau diisi dengan, misal mqttc_dht22, nama ini akan muncul di log mqtt broker ketika sudah terhubung. User dan Password diisikan dengan user password yang digunakan untuk login ke mqtt broker, dalam contoh kali ini adalah user ashoka dan password haha Untuk Topic, kita samakan dengan nama Hostname saja, diisi dengan %hostname% Full topic, biarkan default Klik Save, tunggu hingga restart dan kembali ke halaman awal Jika koneksi ke mqtt broker berhasil maka akan muncul 3 topic baru yang tampil di mqtt explorer yaitu cmnd, tasmota, tele. Dan di dalam sub topic nya muncul nama device kita yang diberi nama sesuai nama hostname tadi, sensor-dht22. ","date":"2022-04-20T21:13:17+07:00","permalink":"https://ashz.xyz/p/sensor-suhu-dan-kelembaban/","title":"Sensor Suhu Dan Kelembaban"},{"content":"Berikut ini langkah untuk membuat mqtt broker menggunakan eclipse mosquitto di podman\nMembuat container Masuk menu podman container\nCreate container, isi field berikut\nName : mqtt Owner : User:ashoka Image : docker.io/library/eclipse-mosquitto Command : /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf [tanpa terminal] Port mapping: host:1883 container 1883 tcp Volume: /home/ashoka/Apps/podman/mqtt/config -\u0026gt; /mosquitto/config writable private /home/ashoka/Apps/podman/mqtt/log -\u0026gt; /mosquitto/log writable private /home/ashoka/Apps/podman/mqtt/data -\u0026gt; /mosquitto/data writable private Buat file dan folder berikut:\n1 2 3 4 5 ./mqtt/ ├── config │ └── mosquitto.conf ├── data └── log file ~/A/podman►cat mqtt/config/mosquitto.conf\n1 2 3 4 5 6 allow_anonymous true persistence true persistence_location /mosquitto/data/ log_dest file /mosquitto/log/mosquitto.log listener 1883 Create and run Test broker tanpa user Jika sudah berhasil running, coba test menggunakan aplikasi MQTT-Explorer atau aplikasi lain. Isikan parameter berikut:\nName: broker podman Protocol: mqtt:// Host: localhost Port: 1883 Klik Save kemudian klik Connect.\nJika berhasil maka akan muncul tampilan berikut:\nMembuat user Pada konfigurasi mosquitto sebelumnya itu membolehkan/mengizinkan semua orang terhubung ke mqtt broker tanpa menggunakan username dan password. Agar tidak semua orang dapat memantau aktivitas pada broker kita, perlu dibuatkan user dan password untuk membatasi akses ke broker. Berikut ini langkah-langkah untuk membuat user dan password untuk mqtt broker.\nMasuk ke console container mqtt Jalankan perintah mosquitto_passwd -c /mosquitto/config/passwd ashoka Akan muncul prompt untuk memasukkan password, masukkan password Update file mosquitto.conf, untuk disable anonim dan tambahkan password file 1 2 3 4 5 6 7 # file /mosquitto/config/mosquitto.conf # disable user anonim allow_anonymous false # set lokasi penyimpanan file password password_file /mosquitto/config/passwd Restart container Setelah di restart coba konek ke broker dengan tanpa menggunakan user dan password, maka akan ada peringatan Connection refused: Not authorized. Kemudian coba konek menggunakan user dan password yang tadi sudah dibuat, maka akan berhasil terhubung ke broker.\n","date":"2022-04-20T13:14:51+07:00","permalink":"https://ashz.xyz/p/podman-mqtt-broker/","title":"Podman Mqtt Broker"},{"content":"Membuat container InfluxDB di podman menggunakan fedora cockpit\nMasuk menu podman container\nCreate container, isi field berikut\nName : flux2 Owner : User:ashoka Image : docker.io/library/influxdb Command : influxd [tanpa terminal] Port mapping: host:8086, container:8086 tcp Volume: /home/ashoka/Apps/podman/flux2/data -\u0026gt; /var/lib/influxdb2 writable shared /home/ashoka/Apps/podman/flux2/config -\u0026gt; /etc/influxdb2 writable shared Environment variabel:\nDOCKER_INFLUXDB_INIT_MODE=setup DOCKER_INFLUXDB_INIT_USERNAME=ashoka DOCKER_INFLUXDB_INIT_PASSWORD=Ashokani DOCKER_INFLUXDB_INIT_ORG=lokal DOCKER_INFLUXDB_INIT_BUCKET=test Buat folder berikut:\n1 2 3 4 . └── flux2 ├── config └── data Create and run ","date":"2022-04-19T10:05:48+07:00","permalink":"https://ashz.xyz/p/podman-influxdb/","title":"Podman InfluxDB"},{"content":"Membuat container Node-RED di podman menggunakan fedora cockpit\nMasuk menu podman container\nCreate container, isi field berikut\nName : nodered Owner : User:ashoka Image : docker.io/nodered/node-red Command : bash [tanpa terminal] Port mapping: host:1880, container:1880 tcp Environment variabel:\nNODE_RED_CREDENTIAL_SECRET=nganu Create and run\n","date":"2022-04-19T10:05:48+07:00","permalink":"https://ashz.xyz/p/podman-node-red/","title":"Podman Node-RED"},{"content":"Membuat container MySQL 8 di podman menggunakan fedora cockpit\nMasuk menu podman container\nCreate container, isi field berikut\nName : mysql8 Owner : User:ashoka Image : docker.io/mysql/mysql-server Command : mysqld [tanpa terminal] Port mapping: host:3306 container 3306 tcp Volume: /home/ashoka/Apps/podman/mysql8/custom.cnf -\u0026gt; /etc/my.cnf.d/custom.cnf writable shared /home/ashoka/Apps/podman/mysql8/initdb -\u0026gt; /docker-entrypoint-initdb.d writable shared /home/ashoka/Apps/podman/mysql8/data -\u0026gt; /var/lib/mysql writable shared Environment variabel:\nMYSQL_ROOT_PASSWORD : lahacia MYSQL_USER : ashoka MYSQL_PASSWORD : haha Buat file dan folder berikut:\n1 2 3 4 5 6 . └── mysql8 ├── custom.cnf ├── data └── initdb └── grant.sql file ~/A/podman►cat mysql8/custom.cnf\n1 2 [mysqld] bind-address = 0.0.0.0 file ~/A/podman►cat mysql8/initdb/grant.sql\n1 GRANT ALL PRIVILEGES ON *.* TO \u0026#39;ashoka\u0026#39;@\u0026#39;%\u0026#39; WITH GRANT OPTION; Create and run ","date":"2022-04-18T11:35:57+07:00","permalink":"https://ashz.xyz/p/podman-mysql-8/","title":"Podman Mysql 8"}]