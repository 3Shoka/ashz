[{"content":"Berikut ini langkah untuk membuat mqtt broker menggunakan eclipse mosquitto di podman\nMembuat container   Masuk menu podman container\n  Create container, isi field berikut\n Name : mqtt Owner : User:ashoka Image : docker.io/library/eclipse-mosquitto Command : /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf [tanpa terminal] Port mapping:  host:1883 container 1883 tcp   Volume:  /home/ashoka/Apps/podman/mqtt/config -\u0026gt; /mosquitto/config writable private /home/ashoka/Apps/podman/mqtt/log -\u0026gt; /mosquitto/log writable private /home/ashoka/Apps/podman/mqtt/data -\u0026gt; /mosquitto/data writable private      Buat file dan folder berikut:\n  1 2 3 4 5  ./mqtt/ ├── config │ └── mosquitto.conf ├── data └── log   file ~/A/podman►cat mqtt/config/mosquitto.conf\n1 2 3 4 5 6  allow_anonymous true persistence true persistence_location /mosquitto/data/ log_dest file /mosquitto/log/mosquitto.log listener 1883    Create and run  Test broker tanpa user Jika sudah berhasil running, coba test menggunakan aplikasi MQTT-Explorer atau aplikasi lain. Isikan parameter berikut:\n Name: broker podman Protocol: mqtt:// Host: localhost Port: 1883  Klik Save kemudian klik Connect.\nJika berhasil maka akan muncul tampilan berikut:\nMembuat user Pada konfigurasi mosquitto sebelumnya itu membolehkan/mengizinkan semua orang terhubung ke mqtt broker tanpa menggunakan username dan password. Agar tidak semua orang dapat memantau aktivitas pada broker kita, perlu dibuatkan user dan password untuk membatasi akses ke broker. Berikut ini langkah-langkah untuk membuat user dan password untuk mqtt broker.\n Masuk ke console container mqtt Jalankan perintah mosquitto_passwd -c /mosquitto/config/passwd ashoka Akan muncul prompt untuk memasukkan password, masukkan password Update file mosquitto.conf, untuk disable anonim dan tambahkan password file  1 2 3 4 5 6 7  # file /mosquitto/config/mosquitto.conf # disable user anonim allow_anonymous false # set lokasi penyimpanan file password password_file /mosquitto/config/passwd    Restart container  Setelah di restart coba konek ke broker dengan tanpa menggunakan user dan password, maka akan ada peringatan Connection refused: Not authorized. Kemudian coba konek menggunakan user dan password yang tadi sudah dibuat, maka akan berhasil terhubung ke broker.\n","date":"2022-04-20T13:14:51+07:00","permalink":"https://ashz.xyz/id/p/podman-mqtt-broker/","title":"Podman Mqtt Broker"},{"content":"Membuat container InfluxDB di podman menggunakan fedora cockpit\n  Masuk menu podman container\n  Create container, isi field berikut\n Name : flux2 Owner : User:ashoka Image : docker.io/library/influxdb Command : influxd [tanpa terminal] Port mapping:  host:8086, container:8086 tcp   Volume:  /home/ashoka/Apps/podman/flux2/data -\u0026gt; /var/lib/influxdb2 writable shared /home/ashoka/Apps/podman/flux2/config -\u0026gt; /etc/influxdb2 writable shared      Environment variabel:\n DOCKER_INFLUXDB_INIT_MODE=setup DOCKER_INFLUXDB_INIT_USERNAME=ashoka DOCKER_INFLUXDB_INIT_PASSWORD=Ashokani DOCKER_INFLUXDB_INIT_ORG=lokal DOCKER_INFLUXDB_INIT_BUCKET=test    Buat folder berikut:\n  1 2 3 4  . └── flux2 ├── config └── data    Create and run  ","date":"2022-04-19T10:05:48+07:00","permalink":"https://ashz.xyz/id/p/podman-influxdb/","title":"Podman InfluxDB"},{"content":"Membuat container Node-RED di podman menggunakan fedora cockpit\n  Masuk menu podman container\n  Create container, isi field berikut\n Name : nodered Owner : User:ashoka Image : docker.io/nodered/node-red Command : bash [tanpa terminal] Port mapping:  host:1880, container:1880 tcp      Environment variabel:\n NODE_RED_CREDENTIAL_SECRET=nganu    Create and run\n  ","date":"2022-04-19T10:05:48+07:00","permalink":"https://ashz.xyz/id/p/podman-node-red/","title":"Podman Node-RED"},{"content":"Membuat container MySQL 8 di podman menggunakan fedora cockpit\n  Masuk menu podman container\n  Create container, isi field berikut\n Name : mysql8 Owner : User:ashoka Image : docker.io/mysql/mysql-server Command : mysqld [tanpa terminal] Port mapping:  host:3306 container 3306 tcp   Volume:  /home/ashoka/Apps/podman/mysql8/custom.cnf -\u0026gt; /etc/my.cnf.d/custom.cnf writable shared /home/ashoka/Apps/podman/mysql8/initdb -\u0026gt; /docker-entrypoint-initdb.d writable shared /home/ashoka/Apps/podman/mysql8/data -\u0026gt; /var/lib/mysql writable shared      Environment variabel:\n MYSQL_ROOT_PASSWORD : lahacia MYSQL_USER : ashoka MYSQL_PASSWORD : haha    Buat file dan folder berikut:\n  1 2 3 4 5 6  . └── mysql8 ├── custom.cnf ├── data └── initdb └── grant.sql   file ~/A/podman►cat mysql8/custom.cnf\n1 2  [mysqld] bind-address = 0.0.0.0   file ~/A/podman►cat mysql8/initdb/grant.sql\n1  GRANT ALL PRIVILEGES ON *.* TO \u0026#39;ashoka\u0026#39;@\u0026#39;%\u0026#39; WITH GRANT OPTION;    Create and run  ","date":"2022-04-18T11:35:57+07:00","permalink":"https://ashz.xyz/id/p/podman-mysql-8/","title":"Podman Mysql 8"}]